---
import type { INavItem } from '@/interfaces/INavItem';
import type { SanityCategory } from '@/interfaces/SanityCategory';
import { getCategories } from '@/services/categorie/getCategories';

export interface Props {
  categoriesMenu?: SanityCategory[];
}

const { categoriesMenu } = Astro.props as Props;
const categories = await getCategories();

function createNavigation(categories: SanityCategory[]) {
  const roots = categories.filter((category) => !category.parent); // top-level categories
  const createNode = (category: SanityCategory): INavItem => {
    const children = categories.filter((c) => c.parent?._ref === category._id);
    if (children.length === 0) {
      const navItem: INavItem = {
        label: category.title,
        url: `/categorie/${category.slug.current}`,
      };
      return navItem;
    } else {
      const navItem = {
        label: category.title,
        children: children.map((child) => createNode(child)),
      };
      return navItem;
    }
  };

  return roots.map((root) => createNode(root));
}

function getCustomMenu(categories: SanityCategory[]) {
  return categories.map((category) => {
    const navItem: INavItem = {
      label: category.title,
      url: `/categorie/${category.slug.current}`,
    };
    return navItem;
  });
}

const navItems: INavItem[] = categoriesMenu
  ? getCustomMenu(categoriesMenu)
  : createNavigation(categories);
---

<nav class="conteneur nav-user">
  <a href="/" class="logo">Article Invit√©</a>
  <ul>
    {
      navItems.map((navItem) => (
        <li>
          <a href={`${navItem.url || '#'}`}>{navItem?.label}</a>
          {navItem.children && (
            <ul class="sub-menu">
              {navItem.children.map((subNavItem) => (
                <li>
                  <a href={subNavItem.url}>{subNavItem.label}</a>
                </li>
              ))}
            </ul>
          )}
        </li>
      ))
    }
  </ul>
</nav>

<style lang="scss">
  .nav-user {
    display: flex;
    justify-content: space-between;
    padding: 16px 0;

    @media screen and (max-width: 766px) {
      flex-direction: column;
      gap: 8px;
    }
    .logo {
      // font-family: var(--title);
      font-variation-settings: 'wght' 800, 'wdth' 0;
      font-size: 24px;
    }

    a {
      text-decoration: none;
    }
    ul,
    li {
      list-style-type: none;
      margin: 0;
      padding: 0;
      position: relative;
    }
    > ul {
      display: flex;
      flex-direction: row;
      gap: 16px;
      font-size: 16px;

      li:hover {
        > a {
          color: #0024ff;
        }
        .sub-menu {
          position: absolute;
          display: flex;
          flex-direction: column;
          gap: 4px;
          padding: 16px;
          border-radius: 16px;
          background-color: #fff;
          box-shadow: 0 2px 17px rgb(0 0 0 / 7%);
        }
      }

      .sub-menu {
        display: none;
      }
    }
  }
</style>
